spring.application.name=ms-pedido

spring.profiles.active=test
spring.jpa.open-in-view=false

eureka.client.register-with-eurika=true
eureka.client.fetch-registry=true

eureka.client.serviceUrl.defaultZone=http://localhost:8081/eureka

server.port=0
# Kafka
#spring.kafka.bootstrap-servers=localhost:9092
#spring.kafka.bootstrap-servers=kafka:9092 - em container
# ip do windows
# spring.kafka.bootstrap-servers=192.168.0.41:9093
#spring.kafka.bootstrap-servers=host.docker.internal:9093
spring.kafka.bootstrap-servers=192.168.56.1:9093
spring.kafka.consumer.group-id=grupo-ms
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Identificador para a instância, para executar várias ao mesmo tempo, se necessário.
# Identificador: nome+número inteiro de 1 a 50.
eureka.instance.instance-id=${spring.application.name}:${random.int[1,50]}